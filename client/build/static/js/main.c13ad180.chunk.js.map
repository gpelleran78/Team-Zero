{"version":3,"sources":["components/NavBar/NavBar.js","components/Home/Home.js","components/BevCard/BevCard.js","components/Wrapper/Wrapper.js","components/BevList/BevList.js","components/Order/Order.js","components/Events/Events.js","components/Listen/Listen.js","App.js","registerServiceWorker.js","index.js"],"names":["NavBar","className","Navbar","bg","expand","Brand","class","Toggle","aria-controls","Collapse","id","Nav","Link","to","NavDropdown","title","Item","Divider","Home","Card","Body","Title","icon","BevCard","props","style","width","marginBottom","border","Img","variant","alt","name","src","image","Text","type","description","price","Button","Wrapper","children","BevList","state","drinks","addToCart","console","log","this","map","drink","key","basePrice","Component","Order","Events","Listen","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c13ad180.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\n\r\nimport {Link} from \"react-router-dom\";  \r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Navbar bg=\"white\" expand=\"lg\">\r\n                <Navbar.Brand class=\"nav-header\">Roadrunner Coffee House</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\r\n                        <Nav.Link><Link to=\"/events\">Upcoming Events</Link></Nav.Link>\r\n                        <Nav.Link><Link to=\"/listen\">My Sounds</Link></Nav.Link>\r\n                        <Nav.Link><Link to=\"/Order\">Order</Link></Nav.Link>\r\n                        <NavDropdown title=\"Menu\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item>Hot Cofees</NavDropdown.Item>\r\n                            <NavDropdown.Item>Iced Cofees</NavDropdown.Item>\r\n                            <NavDropdown.Item>Yum Yum Bakery</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item>Merchandies</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        \r\n                    </Nav>\r\n\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default NavBar;\r\n\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"hello-header\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>Hello! Welcome to Roadrunner </Card.Title>\r\n                    <FontAwesomeIcon icon=\"user-circle\"></FontAwesomeIcon>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./BevCard.css\";\r\n\r\nconst BevCard = (props) => {\r\n    return (\r\n        <div className=\"bev-card col-md-2 text-center\">\r\n        \r\n            <Card style={{ width: '24rem', marginBottom: '25px', border:'0px'}}>\r\n                <Card.Img class=\"coffee-image\" variant=\"top\" alt={props.name} src={props.image}></Card.Img>\r\n                <Card.Body>\r\n                <h3 class=\"coffee-name\">{props.name}</h3>\r\n                    <Card.Text>\r\n                    <p class=\"coffee-type \">{props.type} </p>\r\n                    <p class=\"coffee-description\">{props.description}</p>\r\n                    <p class=\"coffee-price\">Price: ${props.price}.00 </p>\r\n                    </Card.Text>\r\n                    <Button class=\"coffee-order-btn\" variant=\"danger\">Add to Cart</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BevCard; \r\n","import React from \"react\"; \r\nimport \"./Wrapper.css\"; \r\n\r\n\r\nconst Wrapper = (props) => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {props.children}\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Wrapper; \r\n","import React, { Component } from \"react\";\r\nimport \"./BevList.css\";\r\nimport BevCard from \"../../components/BevCard/BevCard\";\r\nimport drinks from \"../../drinks.json\";\r\nimport Wrapper from \"../../components/Wrapper/Wrapper\";\r\n\r\nclass BevList extends Component {\r\n    state = {\r\n        drinks\r\n    }\r\n\r\n    addToCart = id => {\r\n        console.log(`item id: ${id} added to cart`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                {\r\n                    this.state.drinks.map(drink => (\r\n                        <BevCard\r\n                            key={drink.id}\r\n                            image={drink.image}\r\n                            name={drink.name}\r\n                            description={drink.description}\r\n                            price={drink.basePrice}\r\n                            type={drink.type}\r\n                        />\r\n                    ))\r\n                }\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BevList; \r\n","import React from \"react\"; \r\nimport \"./Order.css\"; \r\nimport BevList from \"../../components/BevList/BevList\"; \r\n\r\nconst Order = () => {\r\n    return (\r\n        <div className=\"order-component\">\r\n           <BevList></BevList>\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Order; ","import React from \"react\"; \r\nimport \"./Events.css\"; \r\n\r\nconst Events = () => {\r\n    return(\r\n        <h1>This is the Events Component</h1>\r\n    )\r\n}\r\n\r\nexport default Events; ","import React from \"react\"; \r\nimport \"./Listen.css\"; \r\n\r\nconst Listen = () => {\r\n    return(\r\n        <h2>This is the Listen Component</h2>\r\n    )\r\n}\r\n\r\nexport default Listen; ","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport \"./App.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport Home from \"./components/Home/Home\"; \r\nimport Order from \"./components/Order/Order\"; \r\nimport Events from \"./components/Events/Events\"; \r\nimport Listen from \"./components/Listen/Listen\"\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <NavBar />\r\n        <Route exact path=\"/\" component={Home}></Route>\r\n        <Route path=\"/order\" component={Order}></Route>\r\n        <Route path=\"/events\" component={Events}></Route>\r\n        <Route path=\"/listen\" component={Listen}></Route>\r\n      </Router> \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}