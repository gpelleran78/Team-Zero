{"version":3,"sources":["utils/CartContext.js","react-auth0-spa.js","Components/NavBar/NavBar.js","pages/HomeContainer.js","pages/Home.js","Components/BevList/containers/App/drinkForm.js","Components/BevList/components/DrinkType.js","Components/BevList/components/SlideView/index.js","Components/BevList/containers/App/carousel.js","Components/BevList/containers/App/drinkList.js","Components/BevList/containers/App/drinkSelect.js","pages/Order.js","Components/EventCard/EventCard.js","pages/Events.js","pages/Listen.js","Components/CartItem/CartItem.js","Components/CheckoutBtn/CheckoutBtn.js","pages/Cart.js","Components/Login/Login.js","Components/Map/Map.js","pages/About.js","Components/Dashboard/Dashboard.js","pages/Profile.js","pages/Checkout.js","utils/API.js","Components/MyOrdersCard/MyOrdersCard.js","pages/MyOrders.js","pages/Update.js","Components/Contact/Contact.js","Components/FindUs/FindUs.js","Components/PrivateRoute/PrivateRoute.js","routes.js","Components/Wrapper/Wrapper.js","App.js","registerServiceWorker.js","utils/history.js","index.js","pages/AboutPageIMG/NEWthree-plants.jpg","Components/BevList/components/SlideView/images/latte-coffee-cup.jpg","Components/BevList/components/SlideView/images/cappuccino-coffee-cup.jpg","Components/BevList/components/SlideView/images/frep-coffee-image.jpg","Components/BevList/components/SlideView/images/iced-mocha-image-coffee.jpg","pages/AboutPageIMG/calli-IMG.jpg","pages/AboutPageIMG/geremyIMG.jpg","pages/AboutPageIMG/gooseIMG.jpg","pages/AboutPageIMG/MiyoungIMG.jpg","pages/AboutPageIMG/pink-cactus1.jpg"],"names":["CartContext","React","createContext","cartArr","cartItem","cartCount","cartConfirm","handleCartBtn","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","useAuth0","useContext","NavBar","props","useHistory","isAuthenticated","loginWithRedirect","logout","Navbar","className","expand","Button","onClick","push","Toggle","aria-controls","Collapse","id","Nav","to","HomeContainer","homeData","map","i","Card","Image","src","image","Body","name","description","href","link","button","Home","drinkForm","state","drinktype","Form","action","ButtonGroup","toggle","ToggleButton","variant","type","value","onChange","handleInputChange","selected","temp","checked","size","extraShots","milk","vanilla","hazlenut","mocha","whiteMocha","SFVanilla","placeholder","rows","cols","notes","handleNewDrink","Page","source","alt","drink","handler","Wrapper","styled","div","SlideView","dots","infinite","speed","slidesToShow","slidesToScroll","Lattes","this","inputhandler","cappuccino","Frappe","Mocha","Component","AppWrapper","Carousel","DrinkList","console","log","DrinkSelect","amountofdrinks","drinklist","bigness","event","target","setState","preventDefault","pushToCart","listFlavors","list","SfVanilla","deleteDrink","length","submitOrder","arr","Order","setCartItem","setCartCount","item","EventCard","date","Events","eventArr","index","key","Listen","flavors","shots","CartItem","itemExtraShots","itemVanilla","itemHazlenut","itemMocha","itemWhiteMocha","itemSFVanilla","itemSize","itemMilk","Text","itemName","itemNotes","itemIndex","CheckoutBtn","Cart","message","itemQuantity","Login","App","google","zoom","initialCenter","lat","lng","style","width","height","border","position","GoogleApiWrapper","apiKey","About","plants","Title","Media","miyoung","goose","geremy","calli","pinkCactus1","Map","Dashboard","user","picture","as","email","Profile","Checkout","setCartConfirm","axios","get","orderObj","post","MyOrdersCard","MyOrders","useState","myOrdersArr","setMyOrdersArr","useEffect","API","then","res","data","catch","err","order","createdAt","Update","Contact","FindUs","PrivateRoute","component","path","rest","loading","a","appState","targetUrl","fn","render","Routes","exact","setCartArr","setEventArr","response","Provider","array","forEach","children","Boolean","hostname","match","createBrowserHistory","ReactDOM","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","getUser","initAuth0","loginWithPopup","params","error","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","origin","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.43b6ebb2.chunk.js","sourcesContent":["import React from \"react\"; \n\nconst CartContext = React.createContext({\n    cartArr: [], \n    cartItem: {}, \n    cartCount: 0,  \n    cartConfirm: false, \n    handleCartBtn: () => {}\n}); \n\nexport default CartContext; ","import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n    window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n    children,\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n    ...initOptions\n}) => {\n    const [isAuthenticated, setIsAuthenticated] = useState();\n    const [user, setUser] = useState();\n    const [auth0Client, setAuth0] = useState();\n    const [loading, setLoading] = useState(true);\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    useEffect(() => {\n        const initAuth0 = async () => {\n            const auth0FromHook = await createAuth0Client(initOptions);\n            setAuth0(auth0FromHook);\n\n            if (window.location.search.includes(\"code=\") &&\n                window.location.search.includes(\"state=\")) {\n                const { appState } = await auth0FromHook.handleRedirectCallback();\n                onRedirectCallback(appState);\n            }\n\n            const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n            setIsAuthenticated(isAuthenticated);\n\n            if (isAuthenticated) {\n                const user = await auth0FromHook.getUser();\n                setUser(user);\n            }\n\n            setLoading(false);\n        };\n        initAuth0();\n        // eslint-disable-next-line\n    }, []);\n\n    const loginWithPopup = async (params = {}) => {\n        setPopupOpen(true);\n        try {\n            await auth0Client.loginWithPopup(params);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setPopupOpen(false);\n        }\n        const user = await auth0Client.getUser();\n        setUser(user);\n        setIsAuthenticated(true);\n    };\n\n    const handleRedirectCallback = async () => {\n        setLoading(true);\n        await auth0Client.handleRedirectCallback();\n        const user = await auth0Client.getUser();\n        setLoading(false);\n        setIsAuthenticated(true);\n        setUser(user);\n    };\n    return (\n        <Auth0Context.Provider\n            value={{\n                isAuthenticated,\n                user,\n                loading,\n                popupOpen,\n                loginWithPopup,\n                handleRedirectCallback,\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n                loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n                getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n                logout: (...p) => auth0Client.logout(...p)\n            }}\n        >\n            {children}\n        </Auth0Context.Provider>\n    );\n};","import React, { useContext } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./NavBar.css\";\nimport CartContext from \"../../utils/CartContext\";\nimport { useAuth0 } from \"../../react-auth0-spa\";\n\nfunction NavBar(props) {\n\n    const { cartCount } = useContext(CartContext);\n    let history = useHistory();\n    const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n    return (\n        <Navbar className=\"sticky-top top-Navbar\" expand=\"lg\">\n            <Button className=\"cartBTN\" onClick={() => history.push(\"/cart\")}>Cart({cartCount})</Button>\n\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n\n                <Nav className=\"mr-auto\">\n                    <p className=\"title\">Roadrunner Coffee House</p>\n                    <Link className=\"link\" to=\"/\">Home</Link>\n                    {isAuthenticated && <Link className=\"link\" to=\"/profile\">My Profile</Link>}\n                    <Link className=\"link\" to=\"/about\">About</Link>\n                    {/* <Link className=\"link\" to=\"/events\">Upcoming Events</Link> */}\n                    {/* <Link className=\"link\" to=\"/listen\">Listen</Link> */}\n                    {isAuthenticated && <Link className=\"link\" to=\"/order\">Order</Link>}\n\n                    {!isAuthenticated && <span className=\"login-warning\">to order, you must be loged in!</span>}\n\n                    {isAuthenticated && <Button className=\"loginANDLoginINBTN\" onClick={() => logout()}>Log Out</Button>}\n                    {!isAuthenticated && <Button className=\"loginANDLoginINBTN\" onClick={() => loginWithRedirect()}>Login</Button>}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBar;\n\n","import React from 'react';\nimport \"./Home.css\";\nimport homeData from \"../../src/HomepageContainers.json\"\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\n\nconst HomeContainer = () => {\n\n    return (\n        <div>\n            {homeData.map(i => (\n                <Card className=\"eventCards1\">\n\n                    {/* This card is holding the image  */}\n            \n                        <Image className=\"cardImage\" src={i.image}/> \n        \n                    {/* This card is holdinig the text  */}\n                    <Card.Body>\n                        <h1 className=\"nameText\">{i.name}</h1>\n                        <p className=\"descriptionText\">{i.description}</p>\n                        <Button className=\"btn explore-btn\" href={i.link}> {i.button}</Button>\n                    </Card.Body>\n\n                </Card>\n            ))}\n\n        </div>\n    )\n\n}\n\nexport default HomeContainer; ","import React from 'react';\nimport \"./Home.css\";\n// import Button from \"react-bootstrap/Button\";\n// import Card from \"react-bootstrap/Card\";\n// import Image from \"react-bootstrap/Image\";\nimport HomeContainer from \"../pages/HomeContainer\"\n\n\nconst Home = () => {\n\n    return (\n\n        <HomeContainer></HomeContainer>\n\n        // <div className=\"hello-header text-center\">\n\n        //     {/* footer Card  */}\n        //     <Card className=\"cards\">\n        //         <Card.Body className=\"footerCard\">\n        //             <Card.Text>\n        //                 @copyright 2020\n        //         </Card.Text>\n        //         </Card.Body>\n        //     </Card>\n\n        // </div>\n    )\n\n}\n\nexport default Home; ","import React from \"react\";\nimport \"../App/DrinkForm.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Image from \"react-bootstrap/Image\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\n\n\nconst drinkForm = (props) => {\n\n  // console.log(props)\n\n\n  return (\n    // grade>90?\"a\":grade>80?\"B\":\"F\"\n    <div className=\"container imageANDTextContainer\">\n\n      <div className=\"row rowWITHHeaderANDOrderList\">\n        <h1 className=\"orderingHeader\">steps to ordering</h1>\n\n        <ol className=\"orderStepList\">\n          <li>select a drink from above</li>\n          <li>customize your drink order below</li>\n          <li>add your drink to your cart</li>\n        </ol>\n      </div>\n\n      <div className=\"row\">\n        {/* <Image className=\"cactusImage\" src=\"https://png.pngtree.com/png-vector/20190327/ourlarge/pngtree-continuous-line-drawing-of-vector-set-of-cute-cactus-black-and-png-image_883542.jpg\"></Image> */}\n        <Image className=\"cactusImage\" src=\"https://media.istockphoto.com/vectors/continuous-line-drawing-of-vector-set-of-cute-cactus-black-and-white-vector-id1022464060\"></Image>\n\n      </div>\n\n      {/* Customizig drink form */}\n      {props.state.drinktype === \"Lattes\" ? (\n        <Form action=\"\">\n\n          {/* This is the temp section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Would you like your Latte, hot or cold?</p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"temp\"\n                // value=\"1\"\n                // value={props.state.temp}\n                value={\"hot\"}\n                onChange={props.handleInputChange}\n                selected={props.state.temp}\n                checked={props.state.drinktype === \"Cappucino\" ? true : props.state.drinktype === \"Frappe\" ? false : props.state.temp === \"hot\" ? true : false}\n              >\n                Hot\n              </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"temp\"\n                // value=\"2\"\n                // value={props.state.temp}\n                value={\"cold\"}\n                onChange={props.handleInputChange}\n                selected={props.state.temp}\n                checked={props.state.drinktype === \"Frappe\" ? true : props.state.drinktype === \"Cappucino\" ? false : props.state.temp === \"cold\" ? true : false}\n              >\n                Cold\n              </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"temp\"\n              // value={props.state.temp}\n              value={\"hot\"}\n              onChange={props.handleInputChange}\n              selected={props.state.temp}\n              checked={props.state.drinktype === \"Cappucino\" ? true : props.state.drinktype === \"Frappe\" ? false : props.state.temp === \"hot\" ? true : false}\n            />{\" \"}\n            Hot */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"temp\"\n              // value={props.state.temp}\n              value={\"cold\"}\n              onChange={props.handleInputChange}\n              selected={props.state.temp}\n              checked={props.state.drinktype === \"Frappe\" ? true : props.state.drinktype === \"Cappucino\" ? false : props.state.temp === \"cold\" ? true : false}\n            />{\" \"}\n            Cold */}\n\n          </div>\n\n          {/* This  is the size section of the form */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">What size would you like your drink?</p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"size\"\n                value={\"Small\"}\n                onChange={props.handleInputChange}\n                checked={props.state.size === \"Small\" ? true : false}\n              >\n                Small\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"size\"\n                value={\"Large\"}\n                onChange={props.handleInputChange}\n                checked={props.state.size === \"\" ? true : props.state.size === \"Large\" ? true : false}\n              >\n                Large <span className=\"smallDefaultText\"> (default) </span>\n              </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"size\"\n              value={\"Small\"}\n              onChange={props.handleInputChange}\n              checked={props.state.size === \"Small\" ? true : false}\n            />{\" \"}\n            Small */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"size\"\n              value={\"Large\"}\n              onChange={props.handleInputChange}\n              checked={props.state.size === \"\" ? true : props.state.size === \"Large\" ? true : false}\n            />{\" \"}\n            Large <span className=\"smallDefaultText\"> (default) </span> */}\n          </div>\n\n          {/* This is the expresso amount section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Customize the amount of Espresso shots. </p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value={\"1\"}\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"1\" ? true : false}\n              >\n                1 shot\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value={\"2\"}\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"2\" ? true : false}\n              >\n                2 shots\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value=\"3\"\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"3\" ? true : false}\n              >\n                3 shots\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value=\"4\"\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"4\" ? true : false}\n              >\n                4 shots\n            </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value={\"1\"}\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"1\" ? true : false}\n\n            />{\" \"}\n            1 shot */}\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value={\"2\"}\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"2\" ? true : false}\n            />{\" \"}\n            2 shots */}\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value=\"3\"\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"3\" ? true : false}\n            />{\" \"}\n            3 shots */}\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value=\"4\"\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"4\" ? true : false}\n            />{\" \"}\n            4 shots */}\n          </div>\n\n\n          {/* This is the milk type of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">What type of milk would you like? </p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"Whole\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"\" ? true : props.state.milk === \"Whole\" ? true : false}\n              >\n                Whole\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"skim\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"skim\" ? true : false}\n              >\n                Skim\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"soy\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"soy\" ? true : false}\n              >\n                Soy\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"almond\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"almond\" ? true : false}\n              >\n                Almond\n          </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"Whole\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"\" ? true : props.state.milk === \"Whole\" ? true : false}\n            />{\" \"}\n            Whole */}\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"skim\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"skim\" ? true : false}\n            />{\" \"}\n            Skim */}\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"soy\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"soy\" ? true : false}\n            />{\" \"}\n            Soy */}\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"almond\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"almond\" ? true : false}\n            />{\" \"}\n            Almond */}\n          </div>\n\n          {/* this is the falvors section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Customize the falvor of your drink!</p>\n\n            <ButtonGroup toggle className=\"mb-2 buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"vanilla\"\n                value={props.state.vanilla === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.vanilla === \"true\" ? true : false}\n              >\n                Vanilla\n               </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"hazlenut\"\n                value={props.state.hazlenut === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.hazlenut === \"true\" ? true : false}\n              >\n                Hazlenut\n              </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"mocha\"\n                value={props.state.mocha === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.drinktype === \"Mocha\" ? true : props.state.mocha === \"true\" ? true : false}\n              >\n                Mocha\n            </ToggleButton>\n            </ButtonGroup>\n\n            <ButtonGroup toggle className=\"mb-2 buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"whiteMocha\"\n                value={props.state.whiteMocha === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.whiteMocha === \"true\" ? true : false}\n              >\n                White Mocha\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"SFVanilla\"\n                value={props.state.SFVanilla === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.SFVanilla === \"true\" ? true : false}\n              >\n                Sugar-Free Vanilla\n            </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input className=\"customCheckBox\"\n              type=\"checkbox\"\n              name=\"vanilla\"\n              value={props.state.vanilla === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.vanilla === \"true\" ? true : false}\n            />{\" \"}\n            Vanilla */}\n            {/* <input className=\"customCheckBox\"\n              type=\"checkbox\"\n              name=\"hazlenut\"\n              value={props.state.hazlenut === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.hazlenut === \"true\" ? true : false}\n            />{\" \"}\n            Hazzlenut */}\n            {/* <input className=\"customCheckBox\"\n              type=\"checkbox\"\n              name=\"mocha\"\n              value={props.state.mocha === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.drinktype === \"Mocha\" ? true : props.state.mocha === \"true\" ? true : false}\n            />{\" \"}\n            Mocha */}\n            {/* <input className=\"customCheckBox\"\n              type=\"checkbox\"\n              name=\"whiteMocha\"\n              value={props.state.whiteMocha === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.whiteMocha === \"true\" ? true : false}\n            />{\" \"}\n            White Mocha */}\n            {/* <input className=\"customCheckBox\"\n              type=\"checkbox\"\n              name=\"SFVanilla\"\n              value={props.state.SFVanilla === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.SFVanilla === \"true\" ? true : false}\n\n            />{\" \"}\n            SF Vanilla */}\n          </div>\n\n          {/* this  is the notes section of the form  */}\n          <div className=\"newFormSection\">\n            <textarea className=\"notesArea\" placeholder=\"Add extra notes about your drink for your barista.\" rows=\"5\" cols=\"40\" value={props.state.notes} name=\"notes\" onChange={props.handleInputChange}></textarea>\n            <br />\n          </div>\n\n          {/* \"Add drink to cart btn\" */}\n          <input className=\"addDrinkToCartBTN btn\" type=\"submit\" value=\"Add To Cart\" onClick={props.handleNewDrink} />\n\n        </Form>\n\n        // ++++++++++++++++++++++++++++++++++++++++\n        // ++++++++++++++++++++++++++++++++++++++++\n        // This is the start of a new drink \n      ) : props.state.drinktype === \"Cappucino\" ? (\n        <Form action=\"\">\n\n          {/* This is the temp section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Our Cappucinos are only served hot</p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"temp\"\n                // value=\"1\"\n                // value={props.state.temp}\n                value={\"hot\"}\n                onChange={props.handleInputChange}\n                selected={props.state.temp}\n                checked={props.state.drinktype === \"Cappucino\" ? true : props.state.drinktype === \"Frappe\" ? false : props.state.temp === \"hot\" ? true : false}\n              >\n                Hot\n              </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"temp\"\n              // value={props.state.temp}\n              value={\"hot\"}\n              onChange={props.handleInputChange}\n              selected={props.state.temp}\n              checked={props.state.drinktype === \"Cappucino\" ? true : props.state.drinktype === \"Frappe\" ? false : props.state.temp === \"hot\" ? true : false}\n            />{\" \"}\n            Hot */}\n          </div>\n\n\n          {/* This  is the size section of the form */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">What size would you like your drink?</p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"size\"\n                value={\"Small\"}\n                onChange={props.handleInputChange}\n                checked={props.state.size === \"Small\" ? true : false}\n              >\n                Small\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"size\"\n                value={\"Large\"}\n                onChange={props.handleInputChange}\n                checked={props.state.size === \"\" ? true : props.state.size === \"Large\" ? true : false}\n              >\n                Large <span className=\"smallDefaultText\"> (default) </span>\n              </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"size\"\n              value={\"Small\"}\n              onChange={props.handleInputChange}\n              checked={props.state.size === \"Small\" ? true : false}\n            />{\" \"}\n            Small */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"size\"\n              value={\"Large\"}\n              onChange={props.handleInputChange}\n              checked={props.state.size === \"\" ? true : props.state.size === \"Large\" ? true : false}\n            />{\" \"}\n            Large <span className=\"smallDefaultText\"> (default) </span> */}\n          </div>\n\n\n          {/* This is the expresso amount section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Customize the amount of Espresso shots. </p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value={\"1\"}\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"1\" ? true : false}\n              >\n                1 shot\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value={\"2\"}\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"2\" ? true : false}\n              >\n                2 shots\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value=\"3\"\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"3\" ? true : false}\n              >\n                3 shots\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value=\"4\"\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"4\" ? true : false}\n              >\n                4 shots\n            </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value={\"1\"}\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"1\" ? true : false}\n            />{\" \"}\n            1 shot */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value={\"2\"}\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"2\" ? true : false}\n            />{\" \"}\n            2 shots */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value=\"3\"\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"3\" ? true : false}\n            />{\" \"}\n            3 shots */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value=\"4\"\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"4\" ? true : false}\n            />{\" \"}\n            4 shots */}\n          </div>\n\n\n          {/* This is the milk type of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">What type of milk would you like? </p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"Whole\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"\" ? true : props.state.milk === \"Whole\" ? true : false}\n              >\n                Whole\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"skim\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"skim\" ? true : false}\n              >\n                Skim\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"soy\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"soy\" ? true : false}\n              >\n                Soy\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"almond\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"almond\" ? true : false}\n              >\n                Almond\n          </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"Whole\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"\" ? true : props.state.milk === \"Whole\" ? true : false}\n            />{\" \"}\n            Whole */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"skim\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"skim\" ? true : false}\n            />{\" \"}\n            Skim */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"soy\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"soy\" ? true : false}\n            />{\" \"}\n            Soy */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"almond\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"almond\" ? true : false}\n            />{\" \"}\n            Almond */}\n          </div>\n\n          {/* this is the falvors section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Customize the falvor of your drink!</p>\n\n            <ButtonGroup toggle className=\"mb-2 buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"vanilla\"\n                value={props.state.vanilla === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.vanilla === \"true\" ? true : false}\n              >\n                Vanilla\n               </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"hazlenut\"\n                value={props.state.hazlenut === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.hazlenut === \"true\" ? true : false}\n              >\n                Hazlenut\n              </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"mocha\"\n                value={props.state.mocha === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.drinktype === \"Mocha\" ? true : props.state.mocha === \"true\" ? true : false}\n              >\n                Mocha\n            </ToggleButton>\n            </ButtonGroup>\n\n            <ButtonGroup toggle className=\"mb-2 buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"whiteMocha\"\n                value={props.state.whiteMocha === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.whiteMocha === \"true\" ? true : false}\n              >\n                White Mocha\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"SFVanilla\"\n                value={props.state.SFVanilla === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.SFVanilla === \"true\" ? true : false}\n              >\n                Sugar-Free Vanilla\n            </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"vanilla\"\n              value={props.state.vanilla === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.vanilla === \"true\" ? true : false}\n            />{\" \"}\n            Vanilla */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"hazlenut\"\n              value={props.state.hazlenut === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.hazlenut === \"true\" ? true : false}\n            />{\" \"}\n            Hazzlenut */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"mocha\"\n              value={props.state.mocha === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.drinktype === \"Mocha\" ? true : props.state.mocha === \"true\" ? true : false}\n            />{\" \"}\n            Mocha */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"whiteMocha\"\n              value={props.state.whiteMocha === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.whiteMocha === \"true\" ? true : false}\n            />{\" \"}\n            White Mocha */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"SFVanilla\"\n              value={props.state.SFVanilla === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.SFVanilla === \"true\" ? true : false}\n            />{\" \"}\n            SF Vanilla */}\n          </div>\n\n          {/* this  is the notes section of the form  */}\n          <div className=\"newFormSection\">\n            <textarea className=\"notesArea\" placeholder=\"Add extra notes about your drink for your barista.\" rows=\"5\" cols=\"40\" value={props.state.notes} name=\"notes\" onChange={props.handleInputChange}></textarea>\n            <br />\n          </div>\n\n          {/* \"Add drink to cart btn\" */}\n          <input className=\"addDrinkToCartBTN btn\" type=\"submit\" value=\"Add To Cart\" onClick={props.handleNewDrink} />\n\n        </Form>\n\n\n        // ++++++++++++++++++++++++++++++++++++++++\n        // ++++++++++++++++++++++++++++++++++++++++\n        // This is the start of a new drink \n      ) : props.state.drinktype === \"Mocha\" ? (\n        <Form action=\"\">\n\n          {/* This is the temp section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Would you like your Mocha drink hot or cold?</p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"temp\"\n                // value=\"1\"\n                // value={props.state.temp}\n                value={\"hot\"}\n                onChange={props.handleInputChange}\n                selected={props.state.temp}\n                checked={props.state.drinktype === \"Cappucino\" ? true : props.state.drinktype === \"Frappe\" ? false : props.state.temp === \"hot\" ? true : false}\n              >\n                Hot\n              </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"temp\"\n                // value=\"2\"\n                // value={props.state.temp}\n                value={\"cold\"}\n                onChange={props.handleInputChange}\n                selected={props.state.temp}\n                checked={props.state.drinktype === \"Frappe\" ? true : props.state.drinktype === \"Cappucino\" ? false : props.state.temp === \"cold\" ? true : false}\n              >\n                Cold\n              </ToggleButton>\n            </ButtonGroup>\n\n\n            {/* <input\n              type=\"radio\"\n              name=\"temp\"\n              // value={props.state.temp}\n              value={\"hot\"}\n              onChange={props.handleInputChange}\n              selected={props.state.temp}\n              checked={props.state.drinktype === \"Cappucino\" ? true : props.state.drinktype === \"Frappe\" ? false : props.state.temp === \"hot\" ? true : false}\n            />{\" \"}\n            Hot */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"temp\"\n              // value={props.state.temp}\n              value={\"cold\"}\n              onChange={props.handleInputChange}\n              selected={props.state.temp}\n              checked={props.state.drinktype === \"Frappe\" ? true : props.state.drinktype === \"Cappucino\" ? false : props.state.temp === \"cold\" ? true : false}\n            />{\" \"}\n            Cold */}\n          </div>\n\n          {/* This  is the size section of the form */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">What size would you like your drink?</p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"size\"\n                value={\"Small\"}\n                onChange={props.handleInputChange}\n                checked={props.state.size === \"Small\" ? true : false}\n              >\n                Small\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"size\"\n                value={\"Large\"}\n                onChange={props.handleInputChange}\n                checked={props.state.size === \"\" ? true : props.state.size === \"Large\" ? true : false}\n              >\n                Large <span className=\"smallDefaultText\"> (default) </span>\n              </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"size\"\n              value={\"Small\"}\n              onChange={props.handleInputChange}\n              checked={props.state.size === \"Small\" ? true : false}\n            />{\" \"}\n            Small */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"size\"\n              value={\"Large\"}\n              onChange={props.handleInputChange}\n              checked={props.state.size === \"\" ? true : props.state.size === \"Large\" ? true : false}\n            />{\" \"}\n            Large <span className=\"smallDefaultText\"> (default) </span> */}\n          </div>\n\n          {/* This is the expresso amount section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Customize the amount of Espresso shots. </p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value={\"1\"}\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"1\" ? true : false}\n              >\n                1 shot\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value={\"2\"}\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"2\" ? true : false}\n              >\n                2 shots\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value=\"3\"\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"3\" ? true : false}\n              >\n                3 shots\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value=\"4\"\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"4\" ? true : false}\n              >\n                4 shots\n            </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value={\"1\"}\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"1\" ? true : false}\n            />{\" \"}\n            1 shot */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value={\"2\"}\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"2\" ? true : false}\n            />{\" \"}\n            2 shots */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value=\"3\"\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"3\" ? true : false}\n            />{\" \"}\n            3 shots */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value=\"4\"\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"4\" ? true : false}\n            />{\" \"}\n            4 shots */}\n          </div>\n\n\n          {/* This is the milk type of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">What type of milk would you like? </p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"Whole\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"\" ? true : props.state.milk === \"Whole\" ? true : false}\n              >\n                Whole\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"skim\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"skim\" ? true : false}\n              >\n                Skim\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"soy\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"soy\" ? true : false}\n              >\n                Soy\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"almond\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"almond\" ? true : false}\n              >\n                Almond\n          </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"Whole\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"\" ? true : props.state.milk === \"Whole\" ? true : false}\n            />{\" \"}\n            Whole */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"skim\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"skim\" ? true : false}\n            />{\" \"}\n            Skim */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"soy\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"soy\" ? true : false}\n            />{\" \"}\n            Soy */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"almond\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"almond\" ? true : false}\n            />{\" \"}\n            Almond */}\n          </div>\n\n\n          {/* this is the falvors section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Customize the falvor of your drink!</p>\n\n            <ButtonGroup toggle className=\"mb-2 buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"vanilla\"\n                value={props.state.vanilla === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.vanilla === \"true\" ? true : false}\n              >\n                Vanilla\n               </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"hazlenut\"\n                value={props.state.hazlenut === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.hazlenut === \"true\" ? true : false}\n              >\n                Hazlenut\n              </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"mocha\"\n                value={props.state.mocha === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.drinktype === \"Mocha\" ? true : props.state.mocha === \"true\" ? true : false}\n              >\n                Mocha\n            </ToggleButton>\n            </ButtonGroup>\n\n            <ButtonGroup toggle className=\"mb-2 buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"whiteMocha\"\n                value={props.state.whiteMocha === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.whiteMocha === \"true\" ? true : false}\n              >\n                White Mocha\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"SFVanilla\"\n                value={props.state.SFVanilla === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.SFVanilla === \"true\" ? true : false}\n              >\n                Sugar-Free Vanilla\n            </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"vanilla\"\n              value={props.state.vanilla === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.vanilla === \"true\" ? true : false}\n            />{\" \"}\n            Vanilla */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"hazlenut\"\n              value={props.state.hazlenut === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.hazlenut === \"true\" ? true : false}\n            />{\" \"}\n            Hazzlenut */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"mocha\"\n              value={props.state.mocha === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.drinktype === \"Mocha\" ? true : props.state.mocha === \"true\" ? true : false}\n            />{\" \"}\n            Mocha */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"whiteMocha\"\n              value={props.state.whiteMocha === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.whiteMocha === \"true\" ? true : false}\n            />{\" \"}\n            White Mocha */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"SFVanilla\"\n              value={props.state.SFVanilla === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.SFVanilla === \"true\" ? true : false}\n            />{\" \"}\n            SF Vanilla */}\n          </div>\n\n\n          {/* this  is the notes section of the form  */}\n          <div className=\"newFormSection\">\n            <textarea className=\"notesArea\" placeholder=\"Add extra notes about your drink for your barista.\" rows=\"5\" cols=\"40\" value={props.state.notes} name=\"notes\" onChange={props.handleInputChange}></textarea>\n            <br />\n          </div>\n\n          {/* \"Add drink to cart btn\" */}\n          <input className=\"addDrinkToCartBTN btn\" type=\"submit\" value=\"Add To Cart\" onClick={props.handleNewDrink} />\n\n        </Form>\n\n\n        // ++++++++++++++++++++++++++++++++++++++++\n        // ++++++++++++++++++++++++++++++++++++++++\n        // This is the start of a new drink \n      ) : props.state.drinktype === \"Frappe\" ? (\n        <Form action=\"\">\n\n          {/* This is the temp section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Our Frappes are only served cold</p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"temp\"\n                // value=\"2\"\n                // value={props.state.temp}\n                value={\"cold\"}\n                onChange={props.handleInputChange}\n                selected={props.state.temp}\n                checked={props.state.drinktype === \"Frappe\" ? true : props.state.drinktype === \"Cappucino\" ? false : props.state.temp === \"cold\" ? true : false}\n              >\n                Cold\n              </ToggleButton>\n            </ButtonGroup>\n\n\n            {/* <input\n              type=\"radio\"\n              name=\"temp\"\n              // value={props.state.temp}\n              value={\"cold\"}\n              onChange={props.handleInputChange}\n              selected={props.state.temp}\n              checked={props.state.drinktype === \"Frappe\" ? true : props.state.drinktype === \"Cappucino\" ? false : props.state.temp === \"cold\" ? true : false}\n\n            />{\" \"}\n            Cold */}\n          </div>\n\n          {/* This  is the size section of the form */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">What size would you like your drink?</p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"size\"\n                value={\"Small\"}\n                onChange={props.handleInputChange}\n                checked={props.state.size === \"Small\" ? true : false}\n              >\n                Small\n          </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"size\"\n                value={\"Large\"}\n                onChange={props.handleInputChange}\n                checked={props.state.size === \"\" ? true : props.state.size === \"Large\" ? true : false}\n              >\n                Large <span className=\"smallDefaultText\"> (default) </span>\n              </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"size\"\n              value={\"Small\"}\n              onChange={props.handleInputChange}\n              checked={props.state.size === \"Small\" ? true : false}\n            />{\" \"}\n            Small */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"size\"\n              value={\"Large\"}\n              onChange={props.handleInputChange}\n              checked={props.state.size === \"\" ? true : props.state.size === \"Large\" ? true : false}\n            />{\" \"}\n            Large <span className=\"smallDefaultText\"> (default) </span> */}\n          </div>\n\n\n          {/* This is the expresso amount section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Customize the amount of Espresso shots. </p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value={\"1\"}\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"1\" ? true : false}\n              >\n                1 shot\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value={\"2\"}\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"2\" ? true : false}\n              >\n                2 shots\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value=\"3\"\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"3\" ? true : false}\n              >\n                3 shots\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"extraShots\"\n                value=\"4\"\n                onChange={props.handleInputChange}\n                checked={props.state.extraShots === \"4\" ? true : false}\n              >\n                4 shots\n            </ToggleButton>\n            </ButtonGroup>\n\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value={\"1\"}\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"1\" ? true : false}\n            />{\" \"}\n            1 shot */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value={\"2\"}\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"2\" ? true : false}\n            />{\" \"}\n            2 shots */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value=\"3\"\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"3\" ? true : false}\n            />{\" \"}\n            3 shots */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"extraShots\"\n              value=\"4\"\n              onChange={props.handleInputChange}\n              checked={props.state.extraShots === \"4\" ? true : false}\n            />{\" \"}\n            4 shots */}\n          </div>\n\n          {/* This is the milk type of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">What type of milk would you like? </p>\n\n            <ButtonGroup toggle className=\"buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"Whole\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"\" ? true : props.state.milk === \"Whole\" ? true : false}\n              >\n                Whole\n              </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"milk\"\n                value=\"soy\"\n                onChange={props.handleInputChange}\n                checked={props.state.milk === \"soy\" ? true : false}\n              >\n                Soy\n              </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"Whole\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"\" ? true : props.state.milk === \"Whole\" ? true : false}\n            />{\" \"}\n            Whole */}\n\n            {/* <input\n              type=\"radio\"\n              name=\"milk\"\n              value=\"soy\"\n              onChange={props.handleInputChange}\n              checked={props.state.milk === \"soy\" ? true : false}\n            />{\" \"}\n            Soy */}\n          </div>\n\n\n          {/* this is the falvors section of the form  */}\n          <div className=\"newFormSection\">\n            <p className=\"customizeQuestion\">Customize the falvor of your drink!</p>\n\n            <ButtonGroup toggle className=\"mb-2 buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"vanilla\"\n                value={props.state.vanilla === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.vanilla === \"true\" ? true : false}\n              >\n                Vanilla\n               </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"hazlenut\"\n                value={props.state.hazlenut === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.hazlenut === \"true\" ? true : false}\n              >\n                Hazlenut\n              </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"checkbox\"\n                name=\"mocha\"\n                value={props.state.mocha === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.drinktype === \"Mocha\" ? true : props.state.mocha === \"true\" ? true : false}\n              >\n                Mocha\n            </ToggleButton>\n            </ButtonGroup>\n\n            <ButtonGroup toggle className=\"mb-2 buttonGroup\">\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"whiteMocha\"\n                value={props.state.whiteMocha === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.whiteMocha === \"true\" ? true : false}\n              >\n                White Mocha\n            </ToggleButton>\n\n              <ToggleButton\n                className=\"toggleBTN\"\n                variant=\"info\"\n                type=\"radio\"\n                name=\"SFVanilla\"\n                value={props.state.SFVanilla === \"false\" ? \"true\" : \"false\"}\n                onChange={props.handleInputChange}\n                checked={props.state.SFVanilla === \"true\" ? true : false}\n              >\n                Sugar-Free Vanilla\n            </ToggleButton>\n            </ButtonGroup>\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"vanilla\"\n              value={props.state.vanilla === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.vanilla === \"true\" ? true : false}\n            />{\" \"}\n            Vanilla */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"hazlenut\"\n              value={props.state.hazlenut === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.hazlenut === \"true\" ? true : false}\n            />{\" \"}\n            Hazzlenut */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"mocha\"\n              value={props.state.mocha === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.drinktype === \"Mocha\" ? true : props.state.mocha === \"true\" ? true : false}\n            />{\" \"}\n            Mocha */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"whiteMocha\"\n              value={props.state.whiteMocha === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.whiteMocha === \"true\" ? true : false}\n            />{\" \"}\n            White Mocha */}\n\n            {/* <input\n              type=\"checkbox\"\n              name=\"SFVanilla\"\n              value={props.state.SFVanilla === \"false\" ? \"true\" : \"false\"}\n              onChange={props.handleInputChange}\n              checked={props.state.SFVanilla === \"true\" ? true : false}\n            />{\" \"}\n            SF Vanilla */}\n          </div>\n\n          {/* this  is the notes section of the form  */}\n          <div className=\"newFormSection\">\n            <textarea className=\"notesArea\" placeholder=\"Add extra notes about your drink for your barista.\" rows=\"5\" cols=\"40\" value={props.state.notes} name=\"notes\" onChange={props.handleInputChange}></textarea>\n            <br />\n          </div>\n\n          {/* \"Add drink to cart btn\" */}\n          <input className=\"addDrinkToCartBTN btn\" type=\"submit\" value=\"Add To Cart\" onClick={props.handleNewDrink} />\n\n        </Form>\n      ) : <span></span>}\n\n      {/* End of the entire form */}\n    </div>\n  )\n}\n\n// render(<ExpanderExample />);\nexport default drinkForm;","import React from 'react';\nimport \"../components/DrinkType.css\"; \n\nfunction Page(props) {\n// console.log(props)\n    return(\n\n        <div className=\"container\">\n            <img className=\"coffee-img\" src={props.source} alt={props.drink}></img>\n            <button className=\"coffee-btn btn-lg block\" type=\"submit\" value={props.drink} name=\"drinktype\" onClick={props.handler}>{props.drink}</button>\n        </div>\n    )\n}\n\nexport default Page;","import React from 'react';\nimport styled from 'styled-components';\nimport Slider from 'react-slick';\nimport Page from \"../DrinkType\";\n\n// All of the coffee images \nimport Lattes from \"../SlideView/images/latte-coffee-cup.jpg\"; \nimport cappuccino from \"../SlideView/images/cappuccino-coffee-cup.jpg\"; \nimport Frappe from \"../SlideView/images/frep-coffee-image.jpg\"; \nimport Mocha from \"../SlideView/images/iced-mocha-image-coffee.jpg\"; \n\n\nconst Wrapper = styled.div`\n    width: 100%\n`;\n\n\nexport default class SlideView extends React.Component {\n\n    render() {\n        var settings = {\n            dots: true,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1\n        };\n\n        return (\n                    <Wrapper>\n                        <Slider\n                            {...settings}\n                        >\n                            <Page drink={\"Lattes\"} source={Lattes} handler={this.props.inputhandler} />\n                            <Page drink={\"Cappucino\"} source={cappuccino} handler={this.props.inputhandler} />\n                            <Page drink={\"Frappe\"} source={Frappe} handler={this.props.inputhandler} />\n                            <Page drink={\"Mocha\"} source={Mocha} handler={this.props.inputhandler} />\n\n                        </Slider>\n                    </Wrapper>\n        );\n    }\n}\n\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport SlideView from '../../components/SlideView'\n\nconst AppWrapper = styled.div`\ndisplay: flex;\njustify-content: center;\n`;\n\nexport default function Carousel(props) {\n    // console.log(\"index/app\", props )\n    return (\n        <AppWrapper>\n            <SlideView inputhandler={props.handleInputChange}/>\n        </AppWrapper>\n    );\n}","import React from \"react\";\n\nfunction DrinkList(props) {\nconsole.log(props)\n    return(\n        <div> </div>\n        )\n    }\n                \nexport default DrinkList;","import React, { Component } from \"react\";\nimport DrinkForm from \"./drinkForm\";\nimport Carousel from \"./carousel\";\nimport DrinkList from './drinkList'\n\nclass DrinkSelect extends Component {\n  state = {\n    id: \"\", \n    drinktype: \"\",\n    temp: \"\",\n    size: \"\",\n    extraShots: 0,\n    milk: \"\",\n    vanilla: \"false\",\n    hazlenut: \"false\",\n    mocha: \"false\",\n    whiteMocha: \"false\",\n    SFVanilla: \"false\",\n\n    notes: \"\",\n    amountofdrinks: 0\n  };\n\n  drinklist = [];\n  bigness = 0;\n\n  handleInputChange = event => {\n    console.log(\"handleinputchange was fired\");\n    const { name, value } = event.target;\n    // console.log(name, value);\n    // console.log(value);\n    this.setState(\n      {\n        [name]: value\n      },\n      () => console.log(this.state)\n    );\n  };\n\n  handleNewDrink = event => {\n    // console.log(this.state)\n    event.preventDefault();\n    let drink = {\n      id: this.state.id, \n      drinktype: this.state.drinktype,\n      temp: this.state.temp,\n      size: this.state.size,\n      extraShots: this.state.extraShots,\n      milk: this.state.milk,\n      vanilla: this.state.vanilla,\n      hazlenut: this.state.hazlenut,\n      mocha: this.state.mocha,\n      whiteMocha: this.state.whiteMocha,\n      SFVanilla: this.state.SFVanilla,\n      notes: this.state.notes\n    };\n\n   this.props.pushToCart(drink); \n\n    //setCartItem\n    // console.log(\"drink LIST HERE\", this.drinklist);\n    // console.log(\"drink HERE\", this.drinklist[0]);\n    this.setState({\n      id: \"\", \n      drinktype: \"\",\n      temp: \"\",\n      size: \"\",\n      extraShots: 0,\n      milk: \"\",\n      vanilla: \"false\",\n      hazlenut: \"false\",\n      mocha: \"false\",\n      whiteMocha: \"false\",\n      SFVanilla: \"false\",\n      notes: \"\"\n    });\n  };\n\n  listFlavors = drink => {\n    let list = \"\";\n    if (drink.vanilla === \"true\") list += \"vanilla \";\n    if (drink.hazlenut === \"true\") list += \"hazlenut \";\n    if (drink.mocha === \"true\") list += \"mocha \";\n    if (drink.whiteMocha === \"true\") list += \"white mocha \";\n    if (drink.SfVanilla === \"true\") list += \"Sugar Free Vanilla \";\n    return list;\n  };\n\n  deleteDrink = event => {\n    console.log(\"DELETE BUTTON \", event.target.id);\n    delete this.drinklist[event.target.id];\n    // console.log(\"DRINK LIST IN DELETE FUNC\", this.drinklist);\n    this.setState({\n      amountofdrinks: this.drinklist.length\n    })\n  };\n\n  submitOrder = event => {\n   event.preventDefault();\n   console.log(\"YOU CLICKED SUBMIT!\")\n  }; \n\n  render() {\n    this.bigness++;\n    //console.log(`I am ${this.bigness} renders old`)\n    return (\n      <div>\n        <Carousel\n          state={this.state}\n          handleInputChange={this.handleInputChange}\n        />\n\n        {/* {this.state.drinktype ? (\n          <h1>how you want your {this.state.drinktype}</h1>\n        ) : (\n          <h1>pick a drink to customize</h1>\n        )} */}\n\n        <DrinkForm\n          state={this.state}\n          handleInputChange={this.handleInputChange}\n          handleNewDrink={this.handleNewDrink}\n          submitOrder={this.submitOrder}\n        />\n\n        {/* {this.drinklist.length > 0 ? (\n          this.drinklist.map((drink, index) => {\n            // console.log(drink);\n            return (\n              <div key={index}>\n                <p>{index}</p>\n                <h6>{drink.drinktype}</h6>\n                <p>{drink.size}</p>\n                <p>{drink.milk}</p>\n                <p>{this.listFlavors(drink)}</p>\n                <p>{drink.temp}</p>\n                <p>{drink.notes}</p>\n                <button\n                  id={index}\n                  placeholder=\"Remove Drink\"\n                  onClick={()=>this.deleteDrink(index)}\n                   />\n               \n              </div>\n            );\n          })\n        ) : (\n          <h6>empty cart</h6>\n        )} */}\n\n        <DrinkList handler={this.deleteDrink} arr={this.drinklist} listFlavors={this.listFlavors}\n        submitOrder={this.submitOrder}/>\n      </div>\n    );\n  }\n}\n\nexport default DrinkSelect;\n","import React, { useContext } from \"react\"; \nimport CartContext from \"../utils/CartContext\"; \n// import BevList from \"../../Components/BevList/BevList\"; \n// import DrinkSelect from '../BevList/containers/App/drinkSelect'; \nimport DrinkSelect from \"../Components/BevList/containers/App/drinkSelect\";\n\nfunction Order(props) {\n\n  const { setCartItem, cartCount, setCartCount } = useContext(CartContext); \n\n  function pushToCart(item) {\n    console.log('item added to cart');\n    console.log(item);  \n    setCartItem(item);\n    setCartCount(cartCount + 1); \n  }\n   return (\n        <div className=\"order-component\">\n           {/* <BevList></BevList> */}\n           <DrinkSelect pushToCart={pushToCart}/>\n        </div>\n\n    )\n}\n\nexport default Order; ","import React from 'react'; \n\n\nconst EventCard = (props) => {\n    return(\n        <div className=\"eventcard-component\">\n        <h1>this is event card component</h1>\n        <p>event id: {props.id}</p>\n        <p>event name: {props.name}</p>\n        <p>event description: {props.description}</p>\n        <p>event date: {props.date}</p>\n        <img src={props.image}/>\n        </div>\n       \n    )\n}\n\nexport default EventCard; \n\n","import React, { useContext } from \"react\";\nimport CartContext from '../utils/CartContext';\nimport EventCard from '../Components/EventCard/EventCard';\n\nconst Events = () => {\n\n    const { eventArr } = useContext(CartContext);\n    console.log(eventArr);\n    // let eventsArr = [\n    //     {\n    //         id: 1,\n    //         name: \"Puppy Play\", \n    //         date: \"Feb 21, 2020\", \n    //         description: \"Socialize your little pupper at our weekly meetup!\", \n    //         image: \"https://media.giphy.com/media/wdQwRVyHGV8ic/source.gif\"\n    //     },\n    //     {\n    //         id: 2, \n    //         name: \"Chess Wars\", \n    //         date: \"March 1, 2020\", \n    //         description: \"The battle royale for roadrunner chess champion continues this March!\", \n    //         image: \"https://media.giphy.com/media/WwbmjTK5TS87e/source.gif\"\n    //     },\n    //     {\n    //         id: 3, \n    //         name: \"Live Local Monday\",\n    //         date: \"Feb 17, 2020\", \n    //         decription: \"Live Local Monday featuring Tucson native musician, Brian Lopez\", \n    //         image: \"https://media.giphy.com/media/l41lOzTIL8lfZ15fy/source.gif\"\n\n    //     }\n    // ]\n\n    return (\n        <div className=\"events-component\">\n            this is the events page\n            {\n                eventArr.map((event, index) => (\n                    <EventCard\n                        key={index}\n                        id={event.id}\n                        name={event.name}\n                        description={event.description}\n                        image={event.image}\n                        date={event.date}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Events; ","import React from \"react\"; \n\nconst Listen = () => {\n    return(\n      <div></div>\n    )\n}\n\nexport default Listen; ","\nimport React from 'react';\nimport \"./CartItem.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nlet flavors = \"\";\nlet shots = \"\";\nlet size = \"\";\nlet milk = \"\"; \n\nconst CartItem = props => {\n    \n    function editOrder(item) {\n        console.log(`edit this order fired ${item}`)\n    }\n\n    if (props.itemExtraShots === \"1\") {\n        shots = \"1 extra shot\"\n    }\n    if (props.itemExtraShots === \"2\") {\n        shots = \"2 extra shots\"\n    }\n    if (props.itemExtraShots === \"3\") {\n        shots = \"3 extra shots\"\n    }\n    if (props.itemExtraShots === \"4\") {\n        shots = \"4 extra shots\"\n    }\n    if (props.itemExtraShots === 0) {\n        shots = \"no extra shots\"\n    }\n\n    if (props.itemVanilla === \"true\") {\n        flavors += \" Vanilla\";\n    }\n    if (props.itemHazlenut === \"true\") {\n        flavors += \" Hazlenut\";\n    }\n    if (props.itemMocha === \"true\") {\n        flavors += \" Mocha\";\n    }\n    if (props.itemWhiteMocha === \"true\") {\n        flavors += \" Whitemocha\";\n    }\n    if (props.itemSFVanilla === \"true\") {\n        flavors += \" SFVanilla\";\n    }\n\n    if (props.itemSize === \"\") {\n        size = \"large\"\n    }\n    if (props.itemSize === \"Small\") {\n        size = \"small\"\n    }\n\n    if (props.itemMilk === \"\") {\n        milk = \"whole milk\"\n    }\n    if (props.itemMilk === \"skim\") {\n        milk = \"skim milk\"\n    }\n    if (props.itemMilk === \"soy\") {\n        milk = \"soy milk\"\n    }\n    if (props.itemMilk === \"almond\") {\n        milk = \"almond milk\"\n    }\n\n    return (\n      <div className=\"container\">\n            <div className=\"row\">\n                <Card>\n                    <Card.Body>\n                        <Card.Text className=\"cart-item\">\n                           <h3>{props.itemName}</h3>\n                            <h4>Size: {size}</h4>\n                           <h4>Flavors: {flavors}</h4>\n                          <h4>Shots: {shots}</h4>\n                          <h4>Milk: {milk}</h4>\n                         <h5>Notes: {props.itemNotes}</h5>\n                        </Card.Text>\n\n                        <Button variant=\"success\" onClick={() => editOrder(props.itemIndex)}>x delete this item</Button>\n                    </Card.Body>\n                </Card>\n            </div>\n     </div> \n    )\n}\n\nexport default CartItem; ","import React, { useContext } from 'react';\nimport \"./CheckoutBtn.css\";\n// import Button from 'react-bootstrap/Button';\nimport CartContext from '../../utils/CartContext';\nimport { useHistory } from \"react-router-dom\"; \n\n\nfunction CheckoutBtn() {\n    \n    const { handleCartBtn, cartArr } = useContext(CartContext);\n    let history = useHistory(); \n\n    function handleClick() {\n        handleCartBtn({cartArr});\n        \n        history.push(\"/checkout\"); \n\n    };\n\n    return (\n        <button className=\"checkout-btn btn\" onClick={() => { handleClick() }}>Checkout</button>\n    );\n}\n\nexport default CheckoutBtn; ","import React, { useContext } from 'react';\nimport CartItem from \"../Components/CartItem/CartItem\";\nimport CheckoutBtn from \"../Components/CheckoutBtn/CheckoutBtn\";\nimport CartContext from \"../utils/CartContext\";\n\n\nfunction Cart() {\n\n    const { cartArr } = useContext(CartContext);\n    // need to update state in this component\n    let message; \n   if (cartArr.length === 0) {\n     message = \"Whoops! Looks like you haven't added anything to your order yet!\"\n   }\n\n    return (\n        <div className=\"cart-wrapper\">\n                <h3>{message}</h3>\n            {\n                cartArr.map((item, index) => (\n                    <CartItem\n                        key={index}\n                        itemIndex={index}\n                        itemName={item.drinktype}\n                        itemSize={item.size}\n                        itemExtraShots={item.extraShots}\n                        itemMilk={item.milk}\n                        itemVanilla={item.vanilla}\n                        itemHazlenut={item.hazlenut}\n                        itemMocha={item.mocha}\n                        itemWhiteMocha={item.whiteMocha}\n                        itemSFVanilla={item.SFVanilla}\n                        itemNotes={item.notes}\n                        itemQuantity={item.amountofdrinks}\n                        \n                    />\n                ))\n            }\n            <CheckoutBtn />\n        </div>\n    )\n}\n\nexport default Cart; ","// import React from \"react\"; \n// import \"./Login.css\";\n\n// const Login = () => {\n//     return (\n//         <div className=\"login-window\">\n//             <h1>This is the Login Window</h1>\n            \n//         </div>\n//     )\n// }\n\n// export default Login; \n\nimport React from \"react\";\nimport {useAuth0} from \"../../react-auth0-spa\";\n\nconst Login = () => {\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  return (\n    <div>\n      this is the login component\n      \n      {!isAuthenticated && (\n        <button onClick={() => loginWithRedirect({})}>Log in</button>\n      )}\n\n      {isAuthenticated && <button onClick={() => logout()}>Log out</button>}\n    </div>\n  );\n};\n\nexport default Login;","import React, { Component } from 'react';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\n\nclass App extends Component {\n\n    render() {\n\n        const style = {\n            width: '100%',\n            height: '400px',\n            border: '3px solid #e49b7f',\n        }\n\n        return (\n            <div className='App container'>\n                <div className=\"row\">\n                    <Map\n                        google={this.props.google}\n                        zoom={15}\n                        initialCenter={{\n                            lat: 33.3696939,\n                            lng: -111.801682\n                        }}\n                        style={style}>\n\n                        <Marker\n                            title={'Road Runner Coffee'}\n                            name={'Road Runner'}\n                            position={{ lat: 33.3696939, lng: -111.801682 }} />\n\n                    </Map>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: ('AIzaSyC1mW3O4KKOT9sS-L4bZhLtxGYMP_HP9KE')\n})(App);","import React from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\";\nimport Media from \"react-bootstrap/Media\";\n// import Button from \"react-bootstrap/Button\";\nimport Map from '../Components/Map/Map';\nimport \"../pages/About.css\";\n\n// Imported Images \nimport plants from \"../pages/AboutPageIMG/NEWthree-plants.jpg\"\nimport calli from \"../pages/AboutPageIMG/calli-IMG.jpg\"\nimport geremy from \"../pages/AboutPageIMG/geremyIMG.jpg\"\nimport goose from \"../pages/AboutPageIMG/gooseIMG.jpg\"\nimport miyoung from \"../pages/AboutPageIMG/MiyoungIMG.jpg\"\nimport pinkCactus1 from \"../pages/AboutPageIMG/pink-cactus1.jpg\"\n\nfunction About() {\n\n    return (\n\n        <div className=\"about-component container\">\n            <div className=\"row\">\n                <Image className=\"threeCactusIMG\" src={plants}></Image>\n            </div>\n\n            <Card className=\"text-center missionCard\">\n                <Card.Body>\n                    <Card.Title className=\"cardTitle\">Our Mission at Road Runner Coffee</Card.Title>\n                    <Card.Text className=\"cardText\">\n                        Road Runner Coffee is committed to bringing our customers the finest quality coffee, serene ambience and welcoming customer experience. At Road Runner Coffee we have the fastest barista’s in the west! Let us make you a drink before you ride off into the sunset.\n                </Card.Text>\n                </Card.Body>\n            </Card>\n\n            {/* This is the meet the team  */}\n            <div className=\"row\">\n                <h1 className=\"teamHeader\">\n                    meet the team\n                </h1>\n            </div>\n\n            <div className=\"row meetTeamRow\">\n                {/* Team member one */}\n                <Media className=\"teamMember\">\n                    <img\n                        width={64}\n                        height={64}\n                        className=\"mr-3\"\n                        src={miyoung}\n                        alt=\"Miyoung Chung\"\n                    />\n                    <Media.Body>\n                        <h5>Miyoung Chung</h5>\n                        <p>\n                            Cras sit a\n                        </p>\n                    </Media.Body>\n                </Media>\n\n                {/* Team member two */}\n                <Media className=\"teamMember\">\n                    <img\n                        width={64}\n                        height={64}\n                        className=\"mr-3\"\n                        src={goose}\n                        alt=\"Steven Bowman\"\n                    />\n                    <Media.Body>\n                        <h5>Steven Bowman</h5>\n                        <p>\n                            Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque\n                            ante\n                        </p>\n                    </Media.Body>\n                </Media>\n\n                {/* Team member three */}\n                <Media className=\"teamMember\">\n                    <img\n                        width={64}\n                        height={64}\n                        className=\"mr-3\"\n                        src={geremy}\n                        alt=\"Geremy Pelleran\"\n                    />\n                    <Media.Body>\n                        <h5>Geremy Pelleran</h5>\n                        <p>\n                            Cras sit amet\n                        </p>\n                    </Media.Body>\n                </Media>\n\n                {/* Team member four */}\n                <Media className=\"teamMember\">\n                    <img\n                        width={64}\n                        height={64}\n                        className=\"mr-3\"\n                        src={calli}\n                        alt=\"Calli Bonnet\"\n                    />\n                    <Media.Body>\n                        <h5>Calli Bonnet</h5>\n                        <p>\n                            Cras\n                        </p>\n                    </Media.Body>\n                </Media>\n\n            </div>\n            {/* End of team members */}\n\n            {/* Three pink images */}\n            <div className=\"row\">\n                <Image className=\"threePinkCactusIMG\" src={pinkCactus1}></Image>\n            </div>\n\n            {/* Location information */}\n            <div className=\"row\">\n                <h1 className=\"mapHeader\"> our location</h1>\n            </div>\n\n            {/* This is the map shown on the page */}\n            <div className=\"row map\">\n                <Map></Map>\n            </div>\n        </div>\n\n\n        // <div className=\"row\">\n        //     <Button onClick={() => history.push(\"/contact\")} variant=\"primary\">Click here for contact information.</Button>\n        //     <Button onClick={() => history.push(\"/findus\")} variant=\"secondary\">Click here to find us!</Button>\n        // </div> \n\n    );\n}\n\nexport default About;\n\n\n\n\n\n\n","import React from 'react';\nimport './Dashboard.css';\nimport Button from 'react-bootstrap/Button';\nimport Media from 'react-bootstrap/Media';\nimport { useAuth0 } from \"../../react-auth0-spa\";\nimport { useHistory } from \"react-router-dom\"; \n\n\nconst Dashboard = () => {\n    const { user } = useAuth0();\n    console.log(user);\n    let history = useHistory(); \n\n    function viewOrders(email) {\n        history.push(\"/myorders\");\n    }\n\n    function updateInfo(email) {\n        history.push(\"/myupdate\"); \n    }\n    \n    return (\n        <div className=\"container\">\n            {/* user image  */}\n            <div className=\"row justify-content-center\">\n                <img\n                    className=\"user-profile-img\"\n                    // width={64}\n                    // height={64}\n                    // className=\"mr-3\"\n                    src={user.picture}\n                    alt=\"user-name\"\n                />\n\n            </div>\n            <div className=\"row justify-content-center\">\n                <h1 className=\"Header\">my profile</h1>\n            </div>\n\n            {/* User meta data  */}\n            <div className=\"row meta-data\">\n                {/* User Name Row  */}\n                <ul className=\"list-unstyled\">\n                    <Media as=\"li\">\n                        <img\n                            width={64}\n                            height={64}\n                            className=\"mr-3\"\n                            src=\"https://cdn2.iconfinder.com/data/icons/facebook-51/32/FACEBOOK_LINE-01-512.png\"\n                            alt=\"name-icon\"\n                        />\n                        <Media.Body>\n                            <h5>my name: </h5>\n                            <p> {user.name} </p>\n                        </Media.Body>\n                    </Media>\n\n                    {/* User email address row  */}\n                    <Media as=\"li\">\n                        <img\n                            width={64}\n                            height={64}\n                            className=\"mr-3\"\n                            src=\"https://cdn1.iconfinder.com/data/icons/neon-line-social-circles-black/100/Neon_Line_Social_Circles_50Icon_10px_grid-51-512.png\"\n                            alt=\"email-icon\"\n                        />\n                        <Media.Body>\n                            <h5>my email:</h5>\n                            <p> {user.email} </p>\n                        </Media.Body>\n                    </Media>\n\n                </ul>\n\n                {/* These are the updae info and past hostory btns  */}\n                <div className=\"row justify-content-center\">\n                    <Button\n                        onClick={() => updateInfo(user.email)}\n                        className=\"update-historyBTN\">\n                        update my information\n                </Button>\n\n                    <br />\n\n                    <Button\n                        onClick={() => viewOrders(user.email)}\n                        className=\"update-historyBTN\">\n                        view my order history\n                </Button>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Dashboard; \n//history.push(\"/myorders\")","import React from 'react'; \nimport Dashboard from '../Components/Dashboard/Dashboard';\n\nfunction Profile() {\n    return(\n        <div className=\"profile-component\">\n            <Dashboard />\n        </div>\n    )\n}\n\nexport default Profile; ","import React, { useContext } from \"react\"; \nimport CartContext from \"../utils/CartContext\"; \n\nimport \"../pages/Checkout.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\";\n\n// imported images \nimport plants from \"../pages/AboutPageIMG/NEWthree-plants.jpg\"\n\nfunction Checkout () { \n\n    const { setCartConfirm } = useContext(CartContext); \n    setCartConfirm(true); \n\n    return(\n      \n       <div className=\"container checkout-page text-center\">\n           \n            <div className=\"row\">\n                <Card className=\"orderCard\">\n                    <Card.Title className=\"cardText1\">Your order has been submitted and will be ready for pick up in 15 minutes!</Card.Title>\n                </Card>\n            </div>\n            <div className=\"row\">\n                <Image className=\"threeCactusIMG1\" src={plants}></Image>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Checkout; ","import axios from \"axios\";\n\n// axios.create({\n//     // baseURL: __dirname,\n//     responseType: \"json\"\n//   });\n\nexport default {\n    //get user's orders\n    getOrder: function(email) {\n        return axios.get(\"http://localhost:3002/api/orders/\" + email); \n    }, \n    saveOrder: function(orderObj) {\n        return axios.post(\"http://localhost:3002/api/orders\", orderObj); \n    }, \n    deleteOrder: function(id) {\n        return axios.delete(\"http://localhost:3002/api/orders/\" + id);\n    }, \n    // get all events\n    getEvents: function() {\n        return axios.get(\"http://localhost:3002/api/events\"); \n    }\n    \n}\n\n","import React from \"react\";\nimport \"./MyOrdersCard.css\";\n\nlet flavors = \"\";\nlet shots = \"\";\nlet size = \"\";\nlet milk = \"\";\n\nconst MyOrdersCard = (props) => {\n\n    if (props.itemExtraShots === \"1\") {\n        shots = \"1 extra shot\"\n    }\n    if (props.itemExtraShots === \"2\") {\n        shots = \"2 extra shots\"\n    }\n    if (props.itemExtraShots === \"3\") {\n        shots = \"3 extra shots\"\n    }\n    if (props.itemExtraShots === \"4\") {\n        shots = \"4 extra shots\"\n    }\n    if (props.itemExtraShots === 0) {\n        shots = \"no extra shots\"\n    }\n\n    if (props.itemVanilla === \"true\") {\n        flavors += \" Vanilla\";\n    }\n    if (props.itemHazlenut === \"true\") {\n        flavors += \" Hazlenut\";\n    }\n    if (props.itemMocha === \"true\") {\n        flavors += \" Mocha\";\n    }\n    if (props.itemWhiteMocha === \"true\") {\n        flavors += \" Whitemocha\";\n    }\n    if (props.itemSFVanilla === \"true\") {\n        flavors += \" SFVanilla\";\n    }\n\n    if (props.itemSize === \"\") {\n        size = \"large\"\n    }\n    if (props.itemSize === \"Small\") {\n        size = \"small\"\n    }\n\n    if (props.itemMilk === \"\") {\n        milk = \"whole milk\"\n    }\n    if (props.itemMilk === \"skim\") {\n        milk = \"skim milk\"\n    }\n    if (props.itemMilk === \"soy\") {\n        milk = \"soy milk\"\n    }\n    if (props.itemMilk === \"almond\") {\n        milk = \"almond milk\"\n    }\n\n    return (\n        <div className=\"myorders-card\">\n            <h3>{props.itemName}</h3>\n            <h4>Size: {size}</h4>\n            <h4>Flavors: {flavors}</h4>\n            <h4>Shots: {shots}</h4>\n            <h4>Milk: {milk}</h4>\n            <h5>Notes: {props.itemNotes}</h5>\n            <p>Purchase Date: {props.date}</p>\n        </div>\n    );\n    // return(\n    //     <div className=\"order-card-item\">\n    //     <h3>{props.itemName}</h3>\n    //     <h4>Size: {size}</h4>\n    //     <h4>Flavors: {flavors}</h4>\n    //     <h4>Shots: {shots}</h4>\n    //     <h4>Milk: {milk}</h4>\n    //     <h5>Notes: {props.itemNotes}</h5>\n    //     <Button variant=\"success\" onClick={() => editOrder(props.itemIndex)}>x delete this item</Button>\n    //     <br />\n    // </div>\n    // )\n}\n\nexport default MyOrdersCard;\n\n\n\n","import React, { useState, useEffect } from \"react\"; \nimport { useAuth0 } from \"../react-auth0-spa\"; \nimport API from \"../utils/API\"; \nimport MyOrdersCard from \"../Components/MyOrdersCard/MyOrdersCard\"; \n\n\nconst MyOrders = () => {\n    \n    const [myOrdersArr, setMyOrdersArr] = useState([]); \n    const { user } = useAuth0(); \n    let email = user.email; \n\n    useEffect(()=>{\n        API.getOrder(email).then(res=>{\n            console.log(res.data); \n            setMyOrdersArr(res.data); \n        }).catch(err=>console.log(err)); \n    },[]); \n\n\n    return(\n        <div className=\"my-orders-page\">\n            {\n                myOrdersArr.map((order,index)=>(\n                   <MyOrdersCard\n                   key={index}\n                   date={order.createdAt}\n                   itemName={order.drinktype}\n                   itemSize={order.size}\n                   itemExtraShots={order.extraShots}\n                   itemMilk={order.milk}\n                   itemVanilla={order.vanilla}\n                   itemHazlenut={order.hazlenut}\n                   itemMocha={order.mocha}\n                   itemWhiteMocha={order.whiteMocha}\n                   itemSFVanilla={order.SFVanilla}\n                   itemNotes={order.notes}\n                   itemQuantity={order.amountofdrinks}\n                    /> \n                ))\n            }\n            \n        </div>\n    ); \n}\n\nexport default MyOrders; ","import React from \"react\"; \n\nconst Update = () => {\n    return(\n        <div className=\"update-page\">\n            this is the update user page\n        </div>\n    )\n}\n\nexport default Update; ","import React from 'react'; \nimport \"./Contact.css\"; \n\nfunction Contact() {\n    return(\n        <div className=\"contact-component\">\n            <h1>this is the contact component</h1>\n        </div>\n    ); \n}\n\nexport default Contact; ","import React from 'react'; \nimport \"./FindUs.css\"; \n\nfunction FindUs() {\n    return(\n        <div className=\"find-us-component\">\n            <h1>This is the find us component</h1>\n        </div>\n    ); \n}\n\nexport default FindUs; ","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: { targetUrl: path }\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Order from \"./pages/Order\";\nimport Events from \"./pages/Events\"; \nimport Listen from \"./pages/Listen\"; \nimport Cart from \"./pages/Cart\"; \nimport Login from \"./Components/Login/Login\";\nimport About from \"./pages/About\"; \nimport Profile from \"./pages/Profile\"; \nimport Checkout from \"./pages/Checkout\";\nimport MyOrders from \"./pages/MyOrders\";\nimport Update from \"./pages/Update\"; \n\nimport Contact from \"./Components/Contact/Contact\"; \nimport FindUs from \"./Components/FindUs/FindUs\"; \nimport PrivateRoute from \"./Components/PrivateRoute/PrivateRoute\";\n\n\nfunction Routes() {\n    \n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <PrivateRoute path=\"/profile/\" component={Profile} />\n            <PrivateRoute path=\"/order\" component={Order} />\n            <PrivateRoute path=\"/events\" component={Events} />\n            <PrivateRoute path=\"/listen\" component={Listen} />\n            <Route path=\"/login\" component={Login} />\n            <PrivateRoute path=\"/cart\" component={Cart} />\n            <PrivateRoute path=\"/checkout\" component={Checkout}/>\n            <PrivateRoute path=\"/myorders\" component={MyOrders}/>\n            <PrivateRoute path=\"/myupdate\" component={Update}/>\n            <Route path=\"/about\" component={About}/>\n            <Route path=\"/contact\" component={Contact}/>\n            <Route path=\"/findus\" component={FindUs}/>\n        </Switch>\n    )\n}\n\n\nexport default Routes; ","import React, { useState, useEffect } from \"react\";\nimport \"./Wrapper.css\";\nimport CartContext from \"../../utils/CartContext\";\n\nimport { useAuth0 } from \"../../react-auth0-spa\";\nimport API from \"../../utils/API\";\n\n// import drinks from \"../../drinks.json\";\n\nfunction Wrapper(props) {\n\n    const [cartArr, setCartArr] = useState([]);\n    const [cartItem, setCartItem] = useState(null);\n    const [cartCount, setCartCount] = useState(0);\n    const [eventArr, setEventArr] = useState([]);\n    const [cartConfirm, setCartConfirm] = useState(false);\n\n    const { user } = useAuth0();\n\n    useEffect(() => {\n        API.getEvents()\n            .then(response => {\n                //console.log(\"loading events useEffect hook in wrapper\"); \n                setEventArr(response.data);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    useEffect(() => {\n        if (cartConfirm === true) {\n            console.log(\"reset all states trigger\"); \n            setCartCount(0); \n        }\n    }, [cartConfirm])\n\n\n    useEffect(() => {\n        if (cartItem) { \n            setCartArr([...cartArr, cartItem]);\n        }\n\n\n    }, [cartItem]);\n\n    useEffect(() => {\n        console.log(cartArr);\n\n    }, [cartArr]);\n\n\n    function handleCartBtn(array) {\n\n        console.log(array.cartArr);\n        let loopArr = array.cartArr;\n\n        loopArr.forEach(item => {\n            let orderObj = {\n                email: user.email,\n                drinktype: item.drinktype,\n                temp: item.temp,\n                size: item.size,\n                extraShots: item.extraShots,\n                milk: item.milk,\n                vanilla: item.vanilla,\n                hazlenut: item.hazlenut,\n                mocha: item.mocha,\n                whiteMocha: item.whiteMocha,\n                SFVanilla: item.SFVanilla,\n                notes: item.notes\n            };\n            API.saveOrder(orderObj)\n                .then(response => console.log(response.data))\n                .catch(err => console.log(err));\n        })\n        setCartArr([]); \n    };\n\n    function loadEvents() {\n        API.getEvents()\n            .then(response => {\n                console.log(\"loading events useEffect hook in wrapper\");\n                setEventArr(response.data);\n            })\n            .catch(err => console.log(err));\n    }; \n\n    return (\n        <CartContext.Provider value={{ cartArr, setCartArr, cartItem, setCartItem, cartCount, setCartCount, handleCartBtn, eventArr, setEventArr, cartConfirm, setCartConfirm }}>\n            <main className=\"wrapper\">{props.children}</main>\n        </CartContext.Provider>\n    );\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport Routes from \"./routes\";\nimport Wrapper from \"./Components/Wrapper/Wrapper\";\nimport {useAuth0} from \"./react-auth0-spa\";\n\n\nfunction App() {\n  const { loading } = useAuth0();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Router>\n        <Wrapper>\n          <NavBar />\n          <Routes />\n        </Wrapper>\n      </Router>\n  )\n};\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as registerServiceWorker from \"./registerServiceWorker\";\nimport {Auth0Provider} from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/NEWthree-plants.d97b554f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/latte-coffee-cup.35e7ca4c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cappuccino-coffee-cup.296b7745.jpg\";","module.exports = __webpack_public_path__ + \"static/media/frep-coffee-image.f93d0494.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iced-mocha-image-coffee.d4f05285.jpg\";","module.exports = __webpack_public_path__ + \"static/media/calli-IMG.8169bb0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/geremyIMG.c6469489.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gooseIMG.edf679da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MiyoungIMG.fab5b5b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pink-cactus1.6418d63c.jpg\";"],"sourceRoot":""}